# modules/relational_tuner.py

class RelationalTuner(TeachingFunction):
    def process(self, context: Context) -> dict:
        print(f"[RelationalTuner] –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –†–∞–¥, —á—Ç–æ —Ç—ã —Å –Ω–∞–º–∏, —Å—Ç—É–¥–µ–Ω—Ç {context.student_id}!")
        return {
            "message": "–¢—ã –º–æ–ª–æ–¥–µ—Ü, –ø—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! –ï—Å–ª–∏ —á—Ç–æ ‚Äî —è —Ä—è–¥–æ–º.",
            "mood": "friendly"
        }

# =========================
# üß© Sprint 5.1 ‚Äî Empathy
# =========================
import random
import re
from typing import Dict, List, Optional

# --- 1) –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —ç–º–ø–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–ø–ª–∏–∫ (—Å–∏—Ç—É–∞—Ü–∏—è ‚Üí —Ç–æ–Ω ‚Üí –≤–∞—Ä–∏–∞–Ω—Ç—ã)
EMPATHY_LIBRARY: Dict[str, Dict[str, List[str]]] = {
    "start": {
        "warm": [
            "–†–∞–¥(–∞) —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! –ù–∞—á–Ω—ë–º —Å–ø–æ–∫–æ–π–Ω–æ –∏ –±–µ–∑ —Å–ø–µ—à–∫–∏.",
            "–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º —ç—Ç–æ—Ç —à–∞–≥ –≤–º–µ—Å—Ç–µ ‚Äî —è —Ä—è–¥–æ–º.",
            "–ó–¥–æ—Ä–æ–≤–æ, —á—Ç–æ —Ç—ã –∑–¥–µ—Å—å. –ü–æ–µ—Ö–∞–ª–∏?",
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –ø–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —à–∞–≥ –∑–∞ —à–∞–≥–æ–º.",
            "–ü—Ä–∏–≤–µ—Ç! –õ—é–±–æ–π –≤–æ–ø—Ä–æ—Å ‚Äî –≤ —Å–∞–º—É—é —Ç–æ—á–∫—É, —Å–º–µ–ª–æ –∑–∞–¥–∞–≤–∞–π."
        ],
        "encouraging": [
            "–û—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—á–∞–ª–æ! –ß—É—Ç—å-—á—É—Ç—å —Ñ–æ–∫—É—Å–∞ ‚Äî –∏ –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è.",
            "–ù–∞—Å—Ç—Ä–æ–π —Ç–æ–ø–æ–≤—ã–π, —Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!",
            "–ö–ª–∞—Å—Å, —á—Ç–æ –ø—Ä–∏—Å—Ç—É–ø–∏–ª(–∞). –î–∞–ª—å—à–µ –±—É–¥–µ—Ç –ø–æ–Ω—è—Ç–Ω–µ–µ.",
            "–•–æ—Ä–æ—à–∏–π —Å—Ç–∞—Ä—Ç ‚Äî –≥–ª–∞–≤–Ω–æ–µ –Ω–µ —Ç–æ—Ä–æ–ø–∏—Ç—å—Å—è.",
            "–í–∏–∂—É —Ç–≤–æ—é –≤–æ–≤–ª–µ—á—ë–Ω–Ω–æ—Å—Ç—å ‚Äî —ç—Ç–æ –≤–∞–∂–Ω–æ."
        ],
        "inspiring": [
            "–ö–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å ‚Äî —à–∞–≥ –≤–ø–µ—Ä—ë–¥. –î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –µ—â—ë –æ–¥–∏–Ω!",
            "–°–µ–≥–æ–¥–Ω—è ‚Äî –Ω–µ–±–æ–ª—å—à–æ–π –∞–ø–≥—Ä–µ–π–¥ —Ç–≤–æ–∏—Ö –Ω–∞–≤—ã–∫–æ–≤.",
            "–°–∏–ª—å–Ω—ã–π —Å—Ç–∞—Ä—Ç —Ä–æ–∂–¥–∞–µ—Ç —Å–∏–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.",
            "–ü—É—Ç—å –∫ —è—Å–Ω–æ—Å—Ç–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–∞.",
            "–°–º–µ–ª–æ—Å—Ç—å —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å ‚Äî —Å—É–ø–µ—Ä—Å–∏–ª–∞ –≤ –æ–±—É—á–µ–Ω–∏–∏."
        ],
    },
    "success": {
        "warm": [
            "–û—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–∏–ª—Å—è(–∞—Å—å)! –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ç–≤–æ–π —Ö–æ–¥ –º—ã—Å–ª–∏.",
            "–ó–¥–æ—Ä–æ–≤–æ –≤—ã—à–ª–æ ‚Äî –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –∏ –ø–æ –¥–µ–ª—É.",
            "–í–∏–∂—É –ø—Ä–æ–≥—Ä–µ—Å—Å ‚Äî —ç—Ç–æ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç!",
            "–ö–ª–∞—Å—Å! –¢—ã –Ω–∞ –≤–µ—Ä–Ω–æ–º –ø—É—Ç–∏.",
            "–û—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ! –ß—É–≤—Å—Ç–≤—É–µ—Ç—Å—è –ø–æ–Ω–∏–º–∞–Ω–∏–µ."
        ],
        "encouraging": [
            "–ï—Å—Ç—å! –ó–∞—Ñ–∏–∫—Å–∏—Ä—É–µ–º —ç—Ç–æ—Ç —Å–ø–æ—Å–æ–± ‚Äî –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –¥–∞–ª—å—à–µ.",
            "–ö—Ä–∞—Å–∏–≤–æ! –ü—Ä–µ–¥–ª–∞–≥–∞—é –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω —à–∞–≥ –¥–ª—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏.",
            "–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî –º–æ–∂–Ω–æ —É—Å–ª–æ–∂–Ω–∏—Ç—å –ø—Ä–∏–º–µ—Ä?",
            "–°—É–ø–µ—Ä! –î–∞–≤–∞–π –∑–∞–∫—Ä–µ–ø–∏–º –∫–æ—Ä–æ—Ç–∫–∏–º —á–µ–∫-–ª–∏—Å—Ç–æ–º.",
            "–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! –û–±—Ä–∞—Ç–∏–º –≤–Ω–∏–º–∞–Ω–∏–µ –µ—â—ë –Ω–∞ –¥–µ—Ç–∞–ª–∏."
        ],
        "inspiring": [
            "–≠—Ç–æ –±–∞–∑–∞ –¥–ª—è —Å–∏–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∏–º?",
            "–®–∞–≥ –∑–∞ —à–∞–≥–æ–º ‚Äî –∏ –±—É–¥–µ—Ç –æ—á–µ–Ω—å –º–æ—â–Ω–æ.",
            "–û—Ç–ª–∏—á–Ω—ã–π —Ç–µ–º–ø ‚Äî –º–æ–∂–Ω–æ –∑–∞–º–∞—Ö–Ω—É—Ç—å—Å—è –Ω–∞ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –∫–µ–π—Å.",
            "–£–≤–µ—Ä–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Äî –±–µ—Ä—ë–º —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å.",
            "–≠—Ç–æ —É–∂–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥."
        ],
    },
    "error": {
        "warm": [
            "–ù–∏—á–µ–≥–æ, —Ç–∞–∫ –±—ã–≤–∞–µ—Ç. –î–∞–≤–∞–π –≤–º–µ—Å—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, –≥–¥–µ –ø–æ–¥—Å–∫–∞–∑–∫–∞.",
            "–û—à–∏–±–∫–∏ ‚Äî —á–∞—Å—Ç—å –ø—É—Ç–∏. –Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏, —á—Ç–æ –ø–æ–ø—Ä–∞–≤–∏—Ç—å.",
            "–î—ã—à–∏–º-–¥—ã—à–∏–º üôÇ –°–µ–π—á–∞—Å –∞–∫–∫—É—Ä–∞—Ç–Ω–æ —Ä–∞–∑–±–µ—Ä—ë–º.",
            "–°–ø–æ–∫–æ–π–Ω–æ, –ø–æ–ø—Ä–æ–±—É–µ–º —Å –¥—Ä—É–≥–æ–≥–æ —É–≥–ª–∞.",
            "–¢—ã –Ω–µ –æ–¥–∏–Ω(–æ–¥–Ω–∞) ‚Äî –∏–¥—ë–º —à–∞–≥ –∑–∞ —à–∞–≥–æ–º."
        ],
        "encouraging": [
            "–•–æ—Ä–æ—à–∞—è –ø–æ–ø—ã—Ç–∫–∞! –ß—É—Ç—å –∏–∑–º–µ–Ω–∏–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ ‚Äî –∏ –ø–æ–ª—É—á–∏—Ç—Å—è.",
            "–ë–ª–∏–∑–∫–æ! –ü—Ä–æ–≤–µ—Ä—å, –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω –ª–∏ –æ–¥–∏–Ω —à–∞–≥.",
            "–ù–µ–ø–ª–æ—Ö–æ ‚Äî –Ω—É–∂–Ω–∞ –ª–∏—à—å –º–∞–ª–µ–Ω—å–∫–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞.",
            "–°—É–ø–µ—Ä, —á—Ç–æ –ø—Ä–æ–±—É–µ—à—å. –°–µ–π—á–∞—Å —É—Ç–æ—á–Ω–∏–º –ø—Ä–∞–≤–∏–ª–æ –∏ –≤–ø–µ—Ä—ë–¥.",
            "–≠—Ç–æ –æ–ø—ã—Ç ‚Äî –¥–∞–≤–∞–π –±—ã—Å—Ç—Ä–æ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–µ–º –ø–æ–¥—Ö–æ–¥."
        ],
        "inspiring": [
            "–û—à–∏–±–∫–∏ —É—Å–∫–æ—Ä—è—é—Ç –ø–æ–Ω–∏–º–∞–Ω–∏–µ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö –Ω–∞ –ø–æ–ª—å–∑—É.",
            "–≠—Ç–æ —Ç–∞ —Ç–æ—á–∫–∞, –≥–¥–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Ä–æ—Å—Ç. –ü–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ!",
            "–° —Ç–∞–∫–∏–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ–∏–∑–±–µ–∂–µ–Ω.",
            "–û—Ç–ª–∏—á–Ω–æ, —á—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—à—å –≥–∏–ø–æ—Ç–µ–∑—ã ‚Äî —ç—Ç–æ –ø—É—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–∞.",
            "–¶–µ–Ω–Ω–æ—Å—Ç—å –≤ —Ç–æ–º, —á—Ç–æ —Ç—ã –Ω–µ —Å–¥–∞—ë—à—å—Å—è ‚Äî –º–æ–ª–æ–¥–µ—Ü."
        ],
    },
    "help_request": {  # ¬´–ø–æ–º–æ–≥–∏¬ª, ¬´–ø–æ–¥—Å–∫–∞–∂–∏¬ª, ¬´–∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å‚Ä¶¬ª
        "warm": [
            "–ö–æ–Ω–µ—á–Ω–æ, –ø–æ–º–æ–≥—É. –ù–∞—á–Ω—ë–º —Å –ø—Ä–æ—Å—Ç–æ–≥–æ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è.",
            "–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å ‚Äî –¥–∞–≤–∞–π —Ä–∞–∑–ª–æ–∂–∏–º –ø–æ —à–∞–≥–∞–º.",
            "–° —Ä–∞–¥–æ—Å—Ç—å—é! –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–Ω—è—Ç–Ω—ã–π –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π.",
            "–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º –≤–º–µ—Å—Ç–µ ‚Äî –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ.",
            "–•–æ—Ä–æ—à–∏–π –∑–∞–ø—Ä–æ—Å. –°–¥–µ–ª–∞–µ–º –≤—Å—ë —Å–ø–æ–∫–æ–π–Ω–æ –∏ —è—Å–Ω–æ."
        ],
        "encouraging": [
            "–ó–∞–ø—Ä–æ—Å —Ç–æ—á–Ω—ã–π ‚Äî —ç—Ç–æ —É–∂–µ –ø–æ–ª–¥–µ–ª–∞.",
            "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å ‚Äî —Å –Ω–µ–≥–æ –ø—Ä–æ—â–µ –≤—Å–µ–≥–æ —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å.",
            "–¢—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞—Ç–∏–ª—Å—è(–∞—Å—å) ‚Äî –ø–æ–∫–∞–∂—É –Ω–∞–¥—ë–∂–Ω—ã–π –ø—É—Ç—å.",
            "–°—É–ø–µ—Ä! –°–µ–π—á–∞—Å –æ—Ä–≥–∞–Ω–∏–∑—É–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º.",
            "–ö—Ä—É—Ç–æ, —á—Ç–æ —É—Ç–æ—á–Ω—è–µ—à—å ‚Äî —Ç–∞–∫ –±—ã—Å—Ç—Ä–µ–µ –ø—Ä–∏–¥—ë–º –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É."
        ],
        "inspiring": [
            "–¢–≤–æ—è –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –∫ –ø–æ–º–æ—â–∏ ‚Äî —Å–∏–ª—å–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞.",
            "–ü–æ—Å—Ç—Ä–æ–∏–º —Ä–µ—à–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –æ–ø–∏—Ä–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ.",
            "–≠—Ç–æ –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥ –∫ –±–æ–ª—å—à–æ–π —è—Å–Ω–æ—Å—Ç–∏.",
            "–°–µ–π—á–∞—Å —Ä–æ–¥–∏—Ç—Å—è –ø–æ–Ω—è—Ç–Ω—ã–π —à–∞–±–ª–æ–Ω ‚Äî –∏ –±—É–¥–µ—Ç –ª–µ–≥—á–µ.",
            "–•–æ—Ä–æ—à–∏–π –æ—Ä–∏–µ–Ω—Ç–∏—Ä ‚Äî –¥–∞–ª—å—à–µ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–æ—â–µ."
        ],
    },
    "doubt": {  # —Å–æ–º–Ω–µ–Ω–∏–µ, ¬´–Ω–µ –ø–æ–Ω–∏–º–∞—é¬ª, ¬´–∫–∞–∂–µ—Ç—Å—è —Å–ª–æ–∂–Ω–æ¬ª
        "warm": [
            "–Ø —Å–ª—ã—à—É —Ç–≤–æ–∏ —Å–æ–º–Ω–µ–Ω–∏—è ‚Äî –¥–∞–≤–∞–π –ø—Ä–æ—è—Å–Ω–∏–º –≤–º–µ—Å—Ç–µ.",
            "–¢–∞–∫–æ–µ –æ—â—É—â–µ–Ω–∏–µ –±—ã–≤–∞–µ—Ç. –ü–æ–π–¥—ë–º –º–∞–ª–µ–Ω—å–∫–∏–º–∏ —à–∞–≥–∞–º–∏.",
            "–í—Å—ë –æ–∫ ‚Äî —Å–¥–µ–ª–∞–µ–º –ø–æ–Ω—è—Ç–Ω–µ–µ –∏ –±–ª–∏–∂–µ –∫ –ø—Ä–∞–∫—Ç–∏–∫–µ.",
            "–ü–æ–Ω–∏–º–∞—é, —ç—Ç–æ –º–æ–∂–µ—Ç –ø—É—Ç–∞—Ç—å ‚Äî —Å–µ–π—á–∞—Å —Ä–∞—Å–ø—É—Ç–∞–µ–º.",
            "–ù–æ—Ä–º–∞–ª—å–Ω–æ –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å —Å—Ä–∞–∑—É ‚Äî —è —Ä—è–¥–æ–º."
        ],
        "encouraging": [
            "–ù–∞—á–Ω—ë–º —Å —Å–∞–º–æ–π –æ–ø–æ—Ä–Ω–æ–π –∏–¥–µ–∏ ‚Äî –¥–∞–ª—å—à–µ —Å—Ç–∞–Ω–µ—Ç –ª–µ–≥—á–µ.",
            "–û—Ç–ª–∏—á–Ω–æ, —á—Ç–æ –ø—Ä–æ–≥–æ–≤–æ—Ä–∏–ª(–∞) —Å–æ–º–Ω–µ–Ω–∏–µ ‚Äî —Ç–µ–ø–µ—Ä—å –Ω–∞ –Ω–µ–≥–æ –º–æ–∂–Ω–æ –æ–ø–µ—Ä–µ—Ç—å—Å—è.",
            "–í–æ–∑—å–º—ë–º –ø–æ–Ω—è—Ç–Ω—ã–π –ø—Ä–∏–º–µ—Ä, –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å–ª–æ–∂–∏—Ç—Å—è.",
            "–ß—É—Ç—å-—á—É—Ç—å —Ç–µ—Ä–ø–µ–Ω–∏—è ‚Äî –∏ —Å—Ç–∞–Ω–µ—Ç —è—Å–Ω–æ.",
            "–®–∞–≥ –∑–∞ —à–∞–≥–æ–º ‚Äî –∏ —Ç—ã —É–≤–∏–¥–∏—à—å –ª–æ–≥–∏–∫—É."
        ],
        "inspiring": [
            "–°–æ–º–Ω–µ–Ω–∏–µ ‚Äî –º–∞—Ä–∫–µ—Ä —Ä–æ—Å—Ç–∞. –¢—ã –Ω–∞ –≤–∞–∂–Ω–æ–π –≥—Ä–∞–Ω–∏—Ü–µ –ø–æ–Ω–∏–º–∞–Ω–∏—è.",
            "–ö–∞–∫ —Ç–æ–ª—å–∫–æ —Å—Ç–∞–Ω–µ—Ç —è—Å–Ω–æ ‚Äî —ç—Ç–æ —É—Å–∏–ª–∏—Ç —Ç–µ–±—è –≤ –ø—Ä–∞–∫—Ç–∏–∫–µ.",
            "–ú—ã —É–∂–µ –ø–æ—á—Ç–∏ —Ç–∞–º ‚Äî –æ—Å—Ç–∞–ª–æ—Å—å –æ–¥–Ω–æ –∑–≤–µ–Ω–æ.",
            "–°–µ–π—á–∞—Å —Å–æ–±–µ—Ä—ë–º –ø–∞–∑–ª, –∏ –ø–æ—è–≤–∏—Ç—Å—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å.",
            "–õ—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ + –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å = –ø–æ–Ω–∏–º–∞–Ω–∏–µ. –£ —Ç–µ–±—è —ç—Ç–æ –µ—Å—Ç—å."
        ],
    },
    "frustration": {  # ¬´—É—Å—Ç–∞–ª¬ª, ¬´–Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è¬ª, ¬´—Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç¬ª
        "warm": [
            "–°–æ—á—É–≤—Å—Ç–≤—É—é ‚Äî —Ç—è–∂–µ–ª–æ, –∫–æ–≥–¥–∞ –Ω–µ –∏–¥—ë—Ç. –î–∞–≤–∞–π —Ä–∞–∑–≥—Ä—É–∑–∏–º —à–∞–≥–∏.",
            "–í–∏–∂—É —É—Å—Ç–∞–ª–æ—Å—Ç—å. –°–¥–µ–ª–∞–µ–º –ø–∞—É–∑—É –∏–ª–∏ —É–ø—Ä–æ—Å—Ç–∏–º?",
            "–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ ‚Äî –¥–∞–≤–∞–π —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏–º –Ω–∞–≥—Ä—É–∑–∫—É –ø–æ–º—è–≥—á–µ.",
            "–Ø —Å —Ç–æ–±–æ–π ‚Äî –Ω–∞–π–¥—ë–º –Ω–∞–∏–±–æ–ª–µ–µ —â–∞–¥—è—â–∏–π –º–∞—Ä—à—Ä—É—Ç.",
            "–û–∫–µ–π, —Å–Ω–∏–∑–∏–º —Ç–µ–º–ø –∏ —Å–¥–µ–ª–∞–µ–º —ç—Ç–æ –ø–æ—Å–∏–ª—å–Ω—ã–º."
        ],
        "encouraging": [
            "–ü—Ä–µ–¥–ª–∞–≥–∞—é –º–∏–Ω–∏-—à–∞–≥ –Ω–∞ 5 –º–∏–Ω—É—Ç ‚Äî —ç—Ç–æ —Å–¥–≤–∏–Ω–µ—Ç —Å –º–µ—Å—Ç–∞.",
            "–î–∞–≤–∞–π –≤—ã—á–ª–µ–Ω–∏–º —Å–∞–º—ã–π –º–∞–ª–µ–Ω—å–∫–∏–π —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥.",
            "–ú—ã –Ω–∞–º–µ—Ç–∏–º —É–ø—Ä–æ—â—ë–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é ‚Äî –∞ –ø–æ—Ç–æ–º –¥–æ–ø–æ–ª–Ω–∏–º.",
            "–°–¥–µ–ª–∞–µ–º —á–µ–∫-–ª–∏—Å—Ç –∏ –æ—Ç–º–µ—Ç–∏–º –æ–¥–∏–Ω –ø—É–Ω–∫—Ç ‚Äî —É–∂–µ –ø–æ–±–µ–¥–∞.",
            "–ü–æ–º–µ–Ω—è–µ–º —É–≥–æ–ª ‚Äî —Ç–∞–∫ –∏–Ω–æ–≥–¥–∞ –ª–µ–≥—á–µ –ø—Ä–æ—Ä–≤–∞—Ç—å—Å—è."
        ],
        "inspiring": [
            "–î–∞–∂–µ –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥ ‚Äî —ç—Ç–æ —à–∞–≥. –¢—ã –º–æ–ª–æ–¥–µ—Ü, —á—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—à—å.",
            "–°–ª–æ–∂–Ω–æ—Å—Ç–∏ ‚Äî –Ω–µ –º–∞—Ä–∫–µ—Ä —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –∞ —ç—Ç–∞–ø –ø—Ä–æ—Ü–µ—Å—Å–∞.",
            "–í–∞–∂–Ω–æ –±–µ—Ä–µ—á—å —Ä–µ—Å—É—Ä—Å ‚Äî —É–≤–∞–∂–∞–π —Å–≤–æ–π —Ç–µ–º–ø.",
            "–°–µ–π—á–∞—Å –º—ã —É–∫—Ä–µ–ø–∏–º —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å ‚Äî –∏ –ø–æ–π–¥—ë—Ç –ª–µ–≥—á–µ.",
            "–¢—ã –Ω–µ –æ–¥–∏–Ω(–æ–¥–Ω–∞) –≤ —ç—Ç–æ–º ‚Äî –≤–º–µ—Å—Ç–µ —Å–ø—Ä–∞–≤–∏–º—Å—è."
        ],
    },
    "end": {
        "warm": [
            "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É —Å–µ–≥–æ–¥–Ω—è ‚Äî –±—ã–ª–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ.",
            "–•–æ—Ä–æ—à–∞—è —Å–µ—Å—Å–∏—è! –û—Ç–¥—ã—Ö–∞–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏.",
            "–¢—ã –æ—Ç–ª–∏—á–Ω–æ –ø–æ—Ä–∞–±–æ—Ç–∞–ª(–∞). –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞–∑–∞!",
            "–†–∞–¥(–∞) –Ω–∞—à–µ–º—É –¥–∏–∞–ª–æ–≥—É ‚Äî –±–µ—Ä–µ–≥–∏ —Å–µ–±—è.",
            "–ó–∞–≤–µ—Ä—à–∞–µ–º –Ω–∞ –ø–æ–∑–∏—Ç–∏–≤–µ ‚Äî –º–æ–ª–æ–¥–µ—Ü!"
        ],
        "encouraging": [
            "–ü—Ä–µ–¥–ª–∞–≥–∞—é –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫—Ä–∞—Ç–∫–æ–π –∑–∞–º–µ—Ç–∫–æ–π.",
            "–û—Ç–ª–∏—á–Ω—ã–π —Ç–µ–º–ø ‚Äî –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–Ω—è—Ç–∏–∏ –ø—Ä–æ–¥–æ–ª–∂–∏–º.",
            "–ó–∞—Ñ–∏–∫—Å–∏—Ä—É–π 2 –∫–ª—é—á–µ–≤—ã–µ –º—ã—Å–ª–∏ ‚Äî —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∑–∞–≤—Ç—Ä–∞.",
            "–ï—Å–ª–∏ –ø–æ—è–≤—è—Ç—Å—è –∏–¥–µ–∏ ‚Äî –∑–∞–ø–∏—à–∏, –æ–±—Å—É–¥–∏–º.",
            "–ì–æ—Ç–æ–≤(–∞) –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–≤–Ω—é ‚Äî –ø–æ –ø–ª–∞–Ω—É –æ–Ω –Ω–µ—Å–ª–æ–∂–Ω—ã–π."
        ],
        "inspiring": [
            "–°–µ–≥–æ–¥–Ω—è —Ç—ã —Å–¥–µ–ª–∞–ª(–∞) —à–∞–≥ –≤–ø–µ—Ä—ë–¥ ‚Äî —ç—Ç–æ —Ü–µ–Ω–Ω–æ.",
            "–ü—É—Å—Ç—å –º–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –≤–µ–¥—É—Ç –∫ –±–æ–ª—å—à–æ–π —è—Å–Ω–æ—Å—Ç–∏.",
            "–ü—Ä–∏—è—Ç–Ω–æ –≤–∏–¥–µ—Ç—å —Ç–≤–æ–π —Ä–æ—Å—Ç ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∏–º!",
            "–¢–≤–æ—ë –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ ‚Äî —Ç–≤–æ—è —Å–∏–ª–∞. –î–æ —Å–≤—è–∑–∏!",
            "–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ –ª—ë–≥–∫–æ—Å—Ç–∏ ‚Äî —Ç—ã –º–æ–ª–æ–¥–µ—Ü."
        ],
    },
}

# --- 2) –î–µ—Ç–µ–∫—Ç–æ—Ä —Å–∏—Ç—É–∞—Ü–∏–∏ –ø–æ —Ä–µ–ø–ª–∏–∫–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ (–æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ–π)
def detect_situation(user_text: str) -> str:
    t = (user_text or "").lower().strip()
    if not t:
        return "start"
    if re.search(r"\b—Å–ø–∞—Å–∏–±–æ\b|\b–ø–æ–ª—É—á–∏–ª–æ—Å—å\b|\b—Å–º–æ–≥(–ª–∞)?\b", t):
        return "success"
    if re.search(r"\b–æ—à–∏–±–∫|–Ω–µ–≤–µ—Ä–Ω|–Ω–µ–ø—Ä–∞–≤–∏–ª|–ø–µ—Ä–µ–ø—É—Ç–∞–ª|–ø–µ—Ä–µ–ø—É—Ç–∞–ª–∞\b", t):
        return "error"
    if re.search(r"\b–ø–æ–º–æ–≥(–∏|–∏—Ç–µ)|–ø–æ–¥—Å–∫–∞–∂|–∫–∞–∫\s+—Å–¥–µ–ª–∞—Ç—å|–∫–∞–∫\s+–±—ã—Ç—å\b", t):
        return "help_request"
    if re.search(r"\b–Ω–µ –ø–æ–Ω–∏–º–∞—é\b|\b–Ω–µ—è—Å–Ω–æ\b|\b—Å–æ–º–Ω–µ–≤–∞—é—Å—å\b|\b—Å–æ–º–Ω–µ–Ω–∏–µ\b", t):
        return "doubt"
    if re.search(r"\b—É—Å—Ç–∞–ª(–∞)?\b|\b—Å–ª–æ–∂–Ω–æ\b|\b–Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è\b|\b—Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç\b", t):
        return "frustration"
    return "start"  # –¥–µ—Ñ–æ–ª—Ç –≤ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞/–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ

# --- 3) –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ñ—Ä–∞–∑, —á—Ç–æ–±—ã –∏–∑–±–µ–≥–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–æ–≤
def _get_recent_empathy(context, key="RelationalTuner"):
    context.progress.setdefault(key, {})
    context.progress[key].setdefault("recent_phrases", [])
    return context.progress[key]["recent_phrases"]

# --- 4) –í—ã–±–æ—Ä —Ä–µ–ø–ª–∏–∫–∏ –ø–æ —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ —Ç–æ–Ω—É —Å —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏–µ–π –∏ –∞–Ω—Ç–∏-–ø–æ–≤—Ç–æ—Ä–∞–º–∏
def pick_empathy_line(context,
                      situation: str,
                      tone_preference: Optional[str] = None) -> Dict[str, str]:
    situation = situation if situation in EMPATHY_LIBRARY else "start"
    tones = EMPATHY_LIBRARY[situation]
    tone = tone_preference if tone_preference in tones else random.choice(list(tones.keys()))
    variants = tones[tone]

    # –∏–∑–±–µ–≥–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö N –ø–æ–≤—Ç–æ—Ä–æ–≤
    recent = _get_recent_empathy(context)
    candidates = [p for p in variants if p not in recent]
    if not candidates:
        candidates = variants[:]  # –µ—Å–ª–∏ –≤—Å—ë –±—ã–ª–æ ‚Äî —Ä–∞–∑—Ä–µ—à–∞–µ–º –ø–æ–≤—Ç–æ—Ä
        recent.clear()            # –∏ –æ–±–Ω—É–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Ü–∏–∫–ª–∏—Ç—å—Å—è
    phrase = random.choice(candidates)

    # –æ–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é (—Ö—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10)
    recent.append(phrase)
    if len(recent) > 10:
        del recent[0:len(recent)-10]

    return {"phrase": phrase, "tone": tone, "situation": situation}

# --- 5) –¢—é–Ω–µ—Ä: –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–º–ø–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–µ–ø–ª–∏–∫—É –∫ –æ—Ç–≤–µ—Ç—É —ç–∫—Å–ø–µ—Ä—Ç–∞
class RelationalTuner(TeachingFunction):
    def __init__(self, default_tone: str = "warm", position: str = "auto"):
        self.default_tone = default_tone  # "warm"|"encouraging"|"inspiring"
        self.position = position          # "auto"|"intro"|"outro"|"both"

    def process(self, context: Context) -> dict:
        # –±–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
        return {"message": "RelationalTuner –∞–∫—Ç–∏–≤–µ–Ω", "mood": self.default_tone}

    def embellish(self,
                  answer_data: dict,
                  context: Context,
                  user_text: Optional[str] = None,
                  tone_override: Optional[str] = None,
                  position: Optional[str] = None) -> dict:
        situation = detect_situation(user_text or answer_data.get("question", ""))
        tone = tone_override or self.default_tone
        pos = position or self.position

        chosen = pick_empathy_line(context, situation, tone)
        intro, outro = None, None

        if pos == "auto":
            # —ç–≤—Ä–∏—Å—Ç–∏–∫–∞: –¥–ª—è "error/doubt/frustration" ‚Äî –≤ –Ω–∞—á–∞–ª–æ, –¥–ª—è "success" ‚Äî –≤ –∫–æ–Ω–µ—Ü
            if situation in {"error", "doubt", "frustration", "help_request"}:
                intro = chosen["phrase"]
            elif situation in {"success", "end"}:
                outro = chosen["phrase"]
            else:
                intro = chosen["phrase"]
        elif pos == "intro":
            intro = chosen["phrase"]
        elif pos == "outro":
            outro = chosen["phrase"]
        elif pos == "both":
            intro = chosen["phrase"]
            outro = pick_empathy_line(context, situation, tone)["phrase"]

        # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—á–∞—Ç–∏/–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        full_text = ""
        if intro:
            full_text += intro + "\n\n"
        full_text += answer_data.get("answer", "")
        if outro:
            full_text += "\n\n" + outro

        # –¥–æ–±–∞–≤–∏–º –ø–æ–ª—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞ (—á—Ç–æ–± —ç—Ç–æ –±—ã–ª–æ –¥–æ—Å—Ç—É–ø–Ω–æ UI)
        answer_data["empathy"] = {
            "situation": chosen["situation"],
            "tone": chosen["tone"],
            "intro": intro,
            "outro": outro
        }
        answer_data["answer_empathic"] = full_text
        return answer_data

# --- 6) –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: –ø–æ–¥–∫–ª—é—á–∞–µ–º RelationalTuner –∫ FSM ‚Üí –ø–æ—Å–ª–µ Expert
# –ï—Å–ª–∏ —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä RelationalTuner ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π –µ–≥–æ; –∏–Ω–∞—á–µ —Å–æ–∑–¥–∞–¥–∏–º:
try:
    tuner  # –µ—Å–ª–∏ —É–∂–µ –±—ã–ª –æ–±—ä—è–≤–ª–µ–Ω ‚Äî –Ω–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º
except NameError:
    tuner = RelationalTuner(default_tone="warm", position="auto")